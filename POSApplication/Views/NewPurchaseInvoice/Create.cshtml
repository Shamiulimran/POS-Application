<div class="panel panel-primary panel-bordered">
    <div class="panel-heading">
        <h5 class="panel-title">Purchase Information</h5>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-lg-4">
                        <div class="form-group form-group-xs">
                            @Html.Label("Supplier", new { @class = "control-label col-lg-4" })
                            <div class="col-lg-8">
                                @Html.DropDownList("NewSupplierId", null, "--Select--", htmlAttributes: new { @class = "form-control select2 input-xs" })

                            </div>
                        </div>
                    </div>
                    <div class="col-lg-5">
                        <div class="form-group form-group-xs">
                            @Html.Label("Company Name", new { @class = "control-label col-lg-4" })
                            <div class="col-lg-7">
                                @Html.TextBox("CompanyName", null, new { @class = "form-control", @disabled = "disabled" })

                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group form-group-xs">
                            @Html.Label("Phone", new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.TextBox("Phone", null, new { @class = "form-control", @disabled = "disabled" })

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="form-group form-group-xs">
                            @Html.Label("Email", new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBox("Email", null, new { @class = "form-control", @disabled = "disabled" })

                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="form-group form-group-xs">
                            @Html.Label("Date", new { @class = "control-label col-lg-5" })
                            <div class="col-lg-7">
                                @Html.TextBox("Date", "", new { @class = "form-control Datepicker", @Value = @DateTime.Now.ToShortDateString() })

                            </div>
                        </div>
                    </div>

                </div>

            </div>

        }
        @*//----------Details Table--------------//*@


        @*<div class="details well" style="border: 1px solid white;">*@
        <div class="jumbotron" style="padding:15px;">
            <div class="table-responsive">

                <table class="table table-bordered TableItemDetails" id="TableDetails">
                    <thead>
                        <tr class="bg-blue-gradient">

                            <th class="col-xs-1">Sl No</th>
                            <th class="col-lg-2">Product Category</th>
                            <th class="col-lg-2">Product Name</th>
                            <th class="col-lg-3">Serial No(Barcode)</th>
                            <th class="col-lg-2">Qty</th>
                            <th class="col-lg-1">Purchase Price</th>
                            <th class="col-md-1">Amount</th>
                            <th class="col-md-1">ExpireDate</th>

                            <th class="col-lg-1">Action</th>
                        </tr>

                    </thead>
                    <tbody>
                        <tr>
                            <td><button type="button" class="btn btn-success btn-rounded btn-sm" id="btnAddRow"><span class="glyphicon glyphicon-plus"></span> Add Row</button> </td>
                        </tr>
                    </tbody>
                    <tfoot>

                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td colspan="1" style="text-align:right;  padding-right:20px;" height="30px">&nbsp; Total</td>
                            <td>
                                @*<label class="text-bold total_amount" style="padding-left:10px;"></label>*@
                                <input type="text" name="TotalAmount" class="bg-primary text-white" id="TotalAmount" readonly />
                            </td>

                    </tfoot>
                </table>
            </div>
        </div>
        @*</div>*@

        @*//-------------End Details table----------------//*@
        <br>
        <div class="form-group">
            <div class="col-md-offset-4 col-lg-10">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning" })
                <input type="button" id="Save" value="Save" class="btn btn-success" />
            </div>
        </div>

    </div>






<script>
//const { swal } = require("../../Content/sweetalert2/dist/sweetalert2");

//const { swal, Swal } = require("../../Content/sweetalert2/dist/sweetalert2");


    $('#NewSupplierId').change(function () {
        let NewSupplierId = $('#NewSupplierId').val();

        alert(NewSupplierId);
        $.ajax({
            url: "/NewPurchaseInvoice/GetSupplierInfoById",
            type: "GET",
            dataType: "json",
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',//Deafault
            data: {
                id: NewSupplierId
            },
            success: function (result) {
                console.log(result);
                $("#CompanyName").val(result.CompanyName);
                $("#Phone").val(result.Phone);
                $("#Email").val(result.Email);
            },
            error: function ()
            {
                alert('Something Went Wrong!');
            }
        });
    });
    
  

    $('#btnAddRow').click(function ()
    {
      
        AddNewRow();
    });
    let SlNo = 0;
    function AddNewRow() {
        SlNo++
        var NewRow = jQuery('<tr>'

              + '<td><input type="text" name="SlNo" value="' + SlNo + '" class="form-control  input-sm SlNo" readonly/></td>'
            + '<td><select name="ProductCategory" class="ProductCategory col-lg-2  form-control input-sm select2"><option value> test</option></select></td>'
            + '<td><select name="ProductName" class="ProductName col-lg-2 form-control input-sm select2"><option value> All</option</select></td>'
            + '<td><input type="text" name="SerialNo"   class="form-control input-sm SerialNo"/></td>'
            + '<td><input type="number" name="Qty"   class="form-control input-sm Qty"/></td>'
            + '<td><input type="number" name="PurchasePrize" class="form-control input-sm PurchasePrize"/></td>'
            + '<td><input type="text" name="Amount" class="form-control input-sm Amount" readonly/></td>'
            + '<td><input type="text" name="ExpireDate" class="form-control input-sm ExpireDate" readonly/></td>'
            + '<td><button onclick="RemoveRow(this)" type="button" class="btn btn-xs labeled btn-danger"><i class="glyphicon glyphicon-remove"></i></td></tr>');

        $('table.TableItemDetails tbody').append(NewRow);
        GetProductCatagoryName();
        GetProductName();
        CalculateAmount();


        $('.ExpireDate').datepicker({
            format: 'dd/mm/yy',
            todayHighlight: true,
            todayBtn: true,
            autoclose: true


        });


    }
  

    
    function GetProductCatagoryName()
    {
        

        $.ajax({
            url: "/NewPurchaseInvoice/GetNewProductCatagoryName",
            type: "POST",
            // data: {},
            dataType: "json",
            async: false,
            success: function (data)
            {
                console.log(data);

                $.each(data, function (i, item)
                {
                    var optionhtml = '<option value="' + item.id + '">' + item.text + '</option>';
                    console.log(optionhtml);
                    $(".ProductCategory").append('<option value="' + item.id + '">' + item.text + '</option>');

                });
            },

        });
    }
    function GetProductName()
    {
        
        $.ajax({
            url: "/NewPurchaseInvoice/GetProductName",
            type: "POST",
            dataType: "json",
            success: function (data)

            {
                $.each(data, function (i, item)
                {
                    var optionhtml = '<option value="' +
                            data[i].value + '">' + data[i].text + '</option>';
                    $(".ProductName").append(optionhtml);

                });
                    

            },

        });


    }
    //$('table.TableItemDetails tbody').on('keypress', '.Qty', function () {
    //    var Currentrow = $(this).closest('tr'); //important


    //    var PurchasePrize = Currentrow.find('.PurchasePrize').val();
    //    var quantity = $(this).val();
    //    var Amount = quantity * 1.00 * PurchasePrize * 1.00;

    //    Currentrow.find('input.Amount').val(Amount.toFixed(2));

    //    CalculateAmount();
    //});
    //function CalculateAmount() {
    //    var sumAmount = 0;
    //    $("table.TableItemDetails tbody .Amount").each(function () {
    //        sumAmount = sumAmount * 1.00 + $(this).val() * 1.00;
    //    });
    //    $('#TotalAmount').val(sumAmount.toFixed(2));

    //}
    

    $('table.TableItemDetails tbody').on('keyup', '.PurchasePrize', function ()
    {
        debugger;
        var currentrow = $(this).closest('tr');//important
        var Qty = currentrow.find('.Qty').val();
        var PurchangPrice = $(this).val();

        var amount = Qty * 1.00 * PurchangPrice * 1.00;

        currentrow.find('.Amount').val(amount.toFixed(2));
        CalculateAmount();//Amount calculate

    });

    function CalculateAmount() {
        let totalSum = 0.00;
        $(".Amount").each(function (i,value)
        {
            var amount = $(this).val();
         
            totalSum += amount*1.00;

        });
        $('#TotalAmount').val(totalSum);
    }
    //function RemoveRow(e) {
    //    count++;
    //    var currRowIndex = $(e).closest('tr').index() + 1;
    //    $(e).parent().parent().remove();


    function RemoveRow(e) {
        alert('remove');
        
        var currRowIndex = $(e).closest('tr').index() + 1;
        $(e).parent().parent().remove();
    }

   
    $('table.TableItemDetails tbody').on('change', '.ProductCategorey', function () {

        var ProductCategoreyId = $(this).val();

        var currentrow = $(this).closest('tr');
        CurrentRowIndex = $(this).closest('tr').index();
        $.ajax({
            url: "/NewPurchaseInvoice/GetProductCategoreyId",
            type: "POST",
            dataType: "json",
            // contentType:'',
            data: {
                ProductCategoreyId: ProductCategoreyId
            },
            sucess: function (data) {
                $.each(data, function (i, item) {
                    var optionhtml = '<option value="' + data[i].value + '">' + data[i].text + '</option>';
                    $(".ProductName").append(optionhtml);
                });

            },
            error: function () {
                alert('something Went Wrong!');
            }
        });

    });

    $('#Save').click(function () {

        if ($('#NewSupplierId').val() == "") {
            swal.fire({
                position: 'top',
                icon: 'error',
                title: 'the supplier name is required'
            })
            $('#NewSupplierId').focus();
        }
        else if (CheckDetailData() == true) {
            saveData();
            //CheckDeatailData();

        }


    });
    function CheckDeatailData() {
        var totRow = $('.TableItemDetails tbody tr').length - 1;
        for (var i = 0; i < totRow; i++) {
            if ($('.Table.TableItemDetails tbody tr').eq(i).find("select.ProductCategorey").val() == "") {
                swal.fire({
                    position: 'top',
                    icon: 'error',
                    title: 'the product Categorey is required '

                });
                return false;
            }
            else if ($('Table.TableItemDetails tbody tr').eq(i).find("select.ProductName").val() == "") {
                swal.fire({
                    position: 'top',
                    icon: 'error',
                    title: 'The Product Name is Required'

                });
                return false;
            }
            else if ($('.Table.TableItemDetails tbody tr').eq(i).find("selector.Qty").val() == "") {
                swal.fire({

                    podition: 'top',
                    icon: 'errotr',
                    title: 'The Quantity is Required'
                });
                return false;
            }
            
        }
        return true;
    }
    
    
    function saveData() {
        var NewSupplierId = $('#NewSupplierId').val();
        var CompanyName = $('#CompanyName').val();
        var Phone = ('#Phone').val();
        var Email = $('#Email').val();
        var Date = $('#Date').val();
        var ProductCategory = document.getElementsByName('ProductCategory');
        var ProductName = document.getElementsByName('ProductName');
        var SerialNo = document.getElementsByName('SerialNo');
        var Qty = document.getElementsByName('Qty');
        var PurchasePrize = document.getElementsByName('PurchasePrize');
        var Amount = document.getElementsByName('Amount');
        var ExpireDate = document.getElementsByName('ExpireDate');
        var DetailsValue = [];
        for (var i = 0; i < ProductCategory.length; i++) {
            DetailsValue.push({
                ProductCategoreyId: ProductCategoreyId[i].value,
                ProductId: ProductName[i].value,
                Quantity: Qty[i].value,
                PurchasePrize: PurchasePrize[i].value,
                SerialNo: SerialNo[i].value,
                Amount: Amount[i].value,
                ExpireDate: ExpireDate[i].value



            });

        }
        console.log(DetailsValue);
        $.ajax({
            url: "/NewPurchaseInvoice/SavePurchaseInvoice",
            type: "POST",
            dataType: 'json',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            data: {
                NewPurchaseInvoicedDet: DetailsValue,
                NewSupplierId: NewSupplierId,
                CompanyName: CompanyName,
                Phone: Phone,
                Email: Email,
                Date: Date,

            },
            success: function (result) {
                $("#Save").removeAttr("disabled");
                if (result.flag == true) {
                    Swal.fire({
                        position: 'top',
                        icon: 'success',
                        title: 'Successfully Saved!',
                        showConfirmButton: true,
                    }).then((result) => {
                        if (result.value) {
                            window.location = "/NewPurchaseInvoice/Index";

                        }
                    })

                }

                else {
                    alert("Data Saved Failed");
                }

            },
            error: function () {
                alert('Something went wrong!');
            }



        });



    }
    
    

   
    //    $('#Save').click(function () {

    //        if ($('#NewSupplierId').val() == "") {
    //            Swal.fire({
    //                position: 'top',
    //                icon: 'error',
    //                title: 'The Supplier name i s required'
    //            })
    //            $('#NewSupplierId').focus();
    //        }
    //        else if (CheckDetailData() == true) {
    //            saveData();
    //        }

    //    });
    //function saveData() {

    //    var NewSupplierId = $('#NewSupplierId').val();
    //    var CompanyName = $('#Phone').val();
    //    var Phone = $('#Phone').val();
    //    var Email = $('#Email').val();
    //    var Date = $('#Date').val();

    //    var ProductCategory = document.getElementsByName("ProductCategory");
    //    var ProductName = document.getElementsByName("ProductName");
    //    var SerialNo = document.getElementsByName("SerialNo");
    //    var Qty = document.getElementsByName("Qty");
    //    var PurchasePrize = document.getElementsByName("PurchasePrize");
    //    var Amount = document.getElementsByName("Amount");
    //    var ExpireDate = document.getElementsByName("ExpireDate");
    //    var DetailsValue = [];
    //    for (var i = 0; i < ProductCategory.length) {
    //        DetailsValue.push(

    //            {
    //                ProductCategoryId: ProductCategory[i].value,
    //                ProductId: ProductName[i].value,
    //                Quantity: Qty[i].value,
    //                PurchasePrize: PurchasePrize[i].value,
    //                SerialNo: SerialNo[i].value,
    //                Amount: Amount[i].value,
    //                ExpireDate: ExpireDate[i].value




    //            }
    //        );
    //    }
    //    console.log(DetailsValue);
      
        
      

    //function CheckDetailData() {
    //    var totRow = $('.TableItemDetails tbody tr').length - 1;
    //    //alert(totRow);
    //    for (var i = 0; i < totRow; i++) {

    //        if ($('Table.TableItemDetails tbody tr').eq(i).find("select.ProductCategory").val() == "") {
    //            Swal.fire({
    //                position: 'top',
    //                icon: 'error',
    //                title: 'The Product Category is Reqired'

    //            });
    //            return false;
    //        }
    //        else if ($('Table.TableItemDetails tbody tr').eq(i).find("select.ProductName").val() == "") {
    //            Swal.fire({
    //                position: 'top',
    //                icon: 'error',
    //                title: 'The Product Name is Reqired'

    //            });
    //            return false;
    //        }
    //        else if ($('Table.TableItemDetails tbody tr').eq(i).find("input.Qty").val() == "") {
    //            Swal.fire({
    //                position: 'top',
    //                icon: 'error',
    //                title: 'The Quantity is Reqired'

    //            });
    //            return false;
    //        }


    //    }
    //    return true;
    //}
   
    


      

    //function SaveData()
    //{
    //    //master
    //    var SupplierId = $('#SupplierId').val();
    //    var CompanyName = $('#CompanyName').val();
    //    var Phone = $('#Phone').val();
    //    var Email = $('#Email').val();
    //    var Date = $('#Date').val();

    //    //detais
    //    var ProductCategory = document.getElementsByName("ProductCategory");
    //    var ProductName = document.getElementsByName("ProductName");
    //    var Qty = document.getElementsByName("Qty");
    //    var PurchasePrize = document.getElementsByName("PurchasePrize");
    //    var Amount = document.getElementsByName("Amount");

    //    var SerialNo = document.getElementsByName("SerialNo");
    //    var ExpireDate = document.getElementsByName("ExpireDate");

    //    var DetailsValue = [];

    //    for (var i = 0; i < ProductCategory.length; i++)
    //    {

    //        DetailsValue.push(
    //         {
    //            ProductCategoryId: ProductCategory[i].value,
    //            ProductId: ProductName[i].value,
    //            Quantity: Qty[i].value,
    //            PurchasePrize: PurchasePrize[i].value,
    //            SerialNo: SerialNo[i].value,
    //            Amount: Amount[i].value,
    //            ExpireDate: ExpireDate[i].value
    //          }
    //        );
    //    }
    //    console.log(DetailsValue);
    //    $.ajax({
    //        url: "/PurchaseInvoice/SavePurchaseInvoice",
    //        type: "POST",
    //        dataType: 'json',
    //        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
    //        data:
    //        {
    //            PurchaseInvoicedDetails: DetailsValue,
    //            SupplierId: SupplierId,
    //            CompanyName: CompanyName,
    //            Phone: Phone,
    //            Email: Email,
    //            Date: Date,
    //        },
    //        success: function (result) {
    //            $("#Save").removeAttr("disabled");
    //            if (result.flag == true) {
    //                Swal.fire({
    //                    position: 'top',
    //                    icon: 'success',
    //                    title: 'Successfully Saved!',
    //                    showConfirmButton: true,
    //                }).then((result) => {
    //                    if (result.value) {
    //                        window.location = "/PurchaseInvoice/Index";

    //                    }
    //                })

    //            }

    //            else {
    //                alert("Data Saved Failed");
    //            }

    //        },
    //        error: function () {
    //            alert('Something went wrong!');
    //        }

    //    });



    //}


   

        //$('table.TableItemDetails tbody').on('change', '.ProductCategory', function () {

        //    var ProductCategoryId = $(this).val();

        //    var Currentrow = $(this).closest('tr');

        //    CurrentRowIndex = $(this).closest('tr').index();

        //    $.ajax({
        //        url: "/PurchaseInvoice/GetProductByCatagoryId",
        //        type: "POST",
        //        dataType: 'json',
        //        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
        //        data: {
        //            ProductCategoryId: ProductCategoryId
        //        },
        //        success: function (data)
        //        {
        //       //     Currentrow.find(".ProductName").empty();
        //            $.each(data, function (i, item)
        //            {
        //                var optionhtml = '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
        //              $(".ProductName").append(optionhtml);
        //            });

              

        //        },
        //        error: function () {
        //            alert('Something went wrong!');
        //        }

        //    });
        //});
    //    function GetProductName() {


    //        $.ajax({

    //            url:"/NewPurchaseInvoice/GetProductName",
    //            type:"POST",
    //            dataType:"json",
    //        });
    //    }

    //    $('table.TableItemDetails tbody').on('blur', '.PurchasePrize', function ()
    //    {
    //        var Currentrow = $(this).closest('tr');

    //        var PurchasePrize = $(this).val();

    //        var quantity = Currentrow.find('.Qty').val();

    //        var Amount = quantity * 1.00 * PurchasePrize * 1.00;

    //        Currentrow.find('.Amount').val(Amount.toFixed(2));
    //       // CalculateAmount();

    //    });


         
    
</script>